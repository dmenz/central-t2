# Generated by Django 4.2.4 on 2023-09-22 18:58

from django.db import migrations


# Essa função cria efetivamente o grupo de curador e associa a ele suas 
# permissões.
def apply_migration(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # Pega as permissões existentes.
    add_artigo = Permission.objects.get(codename='add_artigo')
    change_artigo = Permission.objects.get(codename='change_artigo')
    delete_artigo = Permission.objects.get(codename='delete_artigo')
    view_artigo = Permission.objects.get(codename='view_artigo')

    add_autor = Permission.objects.get(codename='add_autor')
    change_autor = Permission.objects.get(codename='change_autor')
    delete_autor = Permission.objects.get(codename='delete_autor')
    view_autor = Permission.objects.get(codename='view_autor')

    curador_permissions = [
        add_artigo,
        change_artigo,
        delete_artigo,
        view_artigo,

        add_autor,
        change_autor,
        delete_autor,
        view_autor,
    ]

    curador = Group(name='curador')
    curador.save()

    curador.permissions.set(curador_permissions)


# Função para desfazer o grupo curador se necessário.
def revert_migration(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Group.objects.filter(
        name__in=[
            u'curador',
        ]
    ).delete()


class Migration(migrations.Migration):
    dependencies = [
            ('auth', '__latest__'),
            ('MeuSite', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(apply_migration, revert_migration),
    ]
